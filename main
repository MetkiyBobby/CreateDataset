# СОЗДАНИЕ НАБОРА ДАННЫХ ДЛЯ РАЗРАБОТКИ ПРОГНОСТИЧЕСКОЙ СХЕМЫ
# НАБОР СОДЕРЖИТ ДАННЫЕ ЗА ПЕРИОД С 01.01.2014 по 31.12.2018

# Набор данных содержит данные приземных наблюдений:
# - Температура в срок наблюдения 
# - Максимальная, минимальная и средняя температура за сутки
# - Дальность видимости в срок наблюдения
# - Явления (в цифрах кода) в срок наблюдения
# - Направление ветра в срок наблюдения
# - Средняя скорость ветра в срок наблюдения
# - Средняя скорость ветра за ночь (18-03 UTC) и за день (06-15 UTC)
# - Порывы ветра в срок наблюдения
# - Сумма осадков за 12 часов (измерение в 03 и в 15 UTC)
# - Относительная влажность воздуха в срок наблюдения
# - Атмосферное давление на уровне станции в срок наблюдения

# Набор данных содержит данные аэрологических наблюдений: 
# - Высота поверхности AT925 за 00 и 12 UTC
# - Температура на поверхности AT925 за 00 и 12 UTC
# - Направление ветра на поверхности AT925 за 00 и 12 UTC
# - Скорость ветра поверхности AT925 за 00 и 12 UTC
# - Относительный геопотенциал между АТ1000 и АТ500 за 00 и 12 UTC

# Наибор данных содержит ежедневные значения параметра Р

library(tibble)
library(readr)

#### СОЗДАНИЕ НАБОРА МЕТЕОРОЛОГИЧЕСКИХ ДАННЫХ ####

# Импорт исходных данных приземных метеорологический наблюдений 
file_path <- paste("C:/Изменение климата и загрязнение атмосферы",
                  "/Разработка прогностической схемы (Вологда)",
                  "/Datasets/27037.txt", sep = "")
meteo <- read.table(file_path, header = FALSE, sep = ";")

# Удаление значений до указанного года
year <- 2014
meteo <- meteo[meteo$V6 >= year,]

# Удаление лишних переменных
variables_to_delete <- c(2:5, 10, 12, 13, 15:37, 39, 
                         41, 43:44, 46:47, 50:59,
                         61:66, 68, 70:72, 74:75, 77:82,
                         84, 86:90) 
meteo <- meteo[-variables_to_delete]  

# Переименование переменных
meteo_variables <- c("WMO Index", "Year", "Month", "Day", "Hour", "Time", # Имена переменных
                     "Visibility", "Weather", "Wind_direction", "Wind_speed",
                     "Wind_gust", "Precipitation", "Precipitation_tag",
                     "Temperature", "T_min", "T_max", "Vapor", "Humidity",
                     "P_station", "P_sea") 
names(meteo) <- meteo_variables 

# Раскодирование значений горизонтальной видимости, км
visibility_values <- c(0.05, 0.2, 0.5, 1, 2, 4, 10, 20)
meteo$Visibility[meteo$Visibility == 91] <- visibility_values[1]
meteo$Visibility[meteo$Visibility == 92] <- visibility_values[2]
meteo$Visibility[meteo$Visibility == 93] <- visibility_values[3]
meteo$Visibility[meteo$Visibility == 94] <- visibility_values[4]
meteo$Visibility[meteo$Visibility == 95] <- visibility_values[5]
meteo$Visibility[meteo$Visibility == 96] <- visibility_values[6]
meteo$Visibility[meteo$Visibility == 97] <- visibility_values[7]
meteo$Visibility[meteo$Visibility == 98] <- visibility_values[8]

# Добавление столбца с датами
date <- as.Date(paste(meteo$Year, meteo$Month, meteo$Day, sep = "/"))
meteo <- tibble::add_column(meteo, date, .after = "WMO Index")

# Сохранение промежуточного варианта в файл CSV
file_path <- paste("C:/Изменение климата и загрязнение атмосферы",
                   "/Разработка прогностической схемы (Вологда)/Datasets/meteo.csv",
                   sep = "")
readr::write_csv(meteo, file_path)

# Импорт промежуточного варианта
file_path <- paste("C:/Изменение климата и загрязнение атмосферы",
                   "/Разработка прогностической схемы (Вологда)/Datasets/meteo.csv",
                   sep = "")
meteo <- read.table(file_path, header = TRUE, sep = ",", stringsAsFactors = FALSE)

# Создание вектора содержащего неповторяющиеся даты
unique_dates <- as.Date(unique(meteo$date))

# Вычсиление максимальной температуры для каждой неповторяющейся даты
T_max_new <- aggregate(T_max ~ date, data = meteo, max)[2]

# Вычсиление минимальной температуры для каждой неповторяющейся даты
T_min_new <- aggregate(T_min ~ date, data = meteo, min)[2]

#### СОЗДАНИЕ ВЕКТОРОВ С МЕТЕОВЕЛИЧИНАМИ ПО СРОКАМ ####

# Создание векторов с видимостью по срокам (ВСВ)
vis_0 <- meteo[meteo$Hour == 0, "Visibility"] 
vis_3 <- meteo[meteo$Hour == 3, "Visibility"] 
vis_6 <- meteo[meteo$Hour == 6, "Visibility"]
vis_9 <- meteo[meteo$Hour == 9, "Visibility"] 
vis_12 <- meteo[meteo$Hour == 12, "Visibility"]
vis_15 <- meteo[meteo$Hour == 15, "Visibility"]
vis_18 <- meteo[meteo$Hour == 18, "Visibility"]
vis_21 <- meteo[meteo$Hour == 21, "Visibility"]

# Создание векторов с явлениями по срокам (ВСВ)
w_0 <- meteo[meteo$Hour == 0, "Weather"] 
w_3 <- meteo[meteo$Hour == 3, "Weather"] 
w_6 <- meteo[meteo$Hour == 6, "Weather"]
w_9 <- meteo[meteo$Hour == 9, "Weather"] 
w_12 <- meteo[meteo$Hour == 12, "Weather"]
w_15 <- meteo[meteo$Hour == 15, "Weather"]
w_18 <- meteo[meteo$Hour == 18, "Weather"]
w_21 <- meteo[meteo$Hour == 21, "Weather"]

# Создание векторов с направлением ветра по срокам (ВСВ) 
w_direct_0 <- meteo[meteo$Hour == 0, "Wind_direction"] 
w_direct_3 <- meteo[meteo$Hour == 3, "Wind_direction"] 
w_direct_6 <- meteo[meteo$Hour == 6, "Wind_direction"]
w_direct_9 <- meteo[meteo$Hour == 9, "Wind_direction"] 
w_direct_12 <- meteo[meteo$Hour == 12, "Wind_direction"]
w_direct_15 <- meteo[meteo$Hour == 15, "Wind_direction"]
w_direct_18 <- meteo[meteo$Hour == 18, "Wind_direction"]
w_direct_21 <- meteo[meteo$Hour == 21, "Wind_direction"]

# Создание векторов со скоростью ветра по срокам (ВСВ)
w_speed_0 <- meteo[meteo$Hour == 0, "Wind_speed"] 
w_speed_3 <- meteo[meteo$Hour == 3, "Wind_speed"] 
w_speed_6 <- meteo[meteo$Hour == 6, "Wind_speed"]
w_speed_9 <- meteo[meteo$Hour == 9, "Wind_speed"] 
w_speed_12 <- meteo[meteo$Hour == 12, "Wind_speed"]
w_speed_15 <- meteo[meteo$Hour == 15, "Wind_speed"]
w_speed_18 <- meteo[meteo$Hour == 18, "Wind_speed"]
w_speed_21 <- meteo[meteo$Hour == 21, "Wind_speed"]

# Создание векторов с порывами ветра по срокам (ВСВ)
w_gust_0 <- meteo[meteo$Hour == 0, "Wind_gust"] 
w_gust_3 <- meteo[meteo$Hour == 3, "Wind_gust"] 
w_gust_6 <- meteo[meteo$Hour == 6, "Wind_gust"]
w_gust_9 <- meteo[meteo$Hour == 9, "Wind_gust"] 
w_gust_12 <- meteo[meteo$Hour == 12, "Wind_gust"]
w_gust_15 <- meteo[meteo$Hour == 15, "Wind_gust"]
w_gust_18 <- meteo[meteo$Hour == 18, "Wind_gust"]
w_gust_21 <- meteo[meteo$Hour == 21, "Wind_gust"]

# Создание векторов с кол-вом осадков по срокам (ВСВ)
precipitation_3 <- meteo[meteo$Hour == 3, "Precipitation"]
precipitation_15 <- meteo[meteo$Hour == 15, "Precipitation"]

# Создание векторов с температурами по срокам (ВСВ)
t_0 <- meteo[meteo$Hour == 0, "Temperature"] 
t_3 <- meteo[meteo$Hour == 3, "Temperature"] 
t_6 <- meteo[meteo$Hour == 6, "Temperature"]
t_9 <- meteo[meteo$Hour == 9, "Temperature"] 
t_12 <- meteo[meteo$Hour == 12, "Temperature"]
t_15 <- meteo[meteo$Hour == 15, "Temperature"]
t_18 <- meteo[meteo$Hour == 18, "Temperature"]
t_21 <- meteo[meteo$Hour == 21, "Temperature"] 

# Создание векторов с парциальным давлением водяного пара (ВСВ)
vapor_0 <- meteo[meteo$Hour == 0, "Vapor"] 
vapor_3 <- meteo[meteo$Hour == 3, "Vapor"] 
vapor_6 <- meteo[meteo$Hour == 6, "Vapor"]
vapor_9 <- meteo[meteo$Hour == 9, "Vapor"] 
vapor_12 <- meteo[meteo$Hour == 12, "Vapor"]
vapor_15 <- meteo[meteo$Hour == 15, "Vapor"]
vapor_18 <- meteo[meteo$Hour == 18, "Vapor"]
vapor_21 <- meteo[meteo$Hour == 21, "Vapor"] 

# Создание векторов с относительной влажностью по срокам (ВСВ)
humidity_0 <- meteo[meteo$Hour == 0, "Humidity"] 
humidity_3 <- meteo[meteo$Hour == 3, "Humidity"] 
humidity_6 <- meteo[meteo$Hour == 6, "Humidity"]
humidity_9 <- meteo[meteo$Hour == 9, "Humidity"] 
humidity_12 <- meteo[meteo$Hour == 12, "Humidity"]
humidity_15 <- meteo[meteo$Hour == 15, "Humidity"]
humidity_18 <- meteo[meteo$Hour == 18, "Humidity"]
humidity_21 <- meteo[meteo$Hour == 21, "Humidity"] 

# Создание векторов с давлением на уровене станции по срокам (ВСВ)
p_station_0 <- meteo[meteo$Hour == 0, "P_station"] 
p_station_3 <- meteo[meteo$Hour == 3, "P_station"] 
p_station_6 <- meteo[meteo$Hour == 6, "P_station"]
p_station_9 <- meteo[meteo$Hour == 9, "P_station"] 
p_station_12 <- meteo[meteo$Hour == 12, "P_station"]
p_station_15 <- meteo[meteo$Hour == 15, "P_station"]
p_station_18 <- meteo[meteo$Hour == 18, "P_station"]
p_station_21 <- meteo[meteo$Hour == 21, "P_station"] 

#### Создание таблицы данных с новыми переменными ####
meteo_2 <- data.frame(dates = unique_dates, 
                      t_0, t_3, t_6, t_9, t_12, t_15, t_18, t_21,
                      t_max = T_max_new, t_min = T_min_new,
                      vis_0, vis_3, vis_6, vis_9, vis_12, vis_15, vis_18, vis_21,
                      w_0, w_3, w_6, w_9, w_12, w_15, w_18, w_21,
                      w_direct_0, w_direct_3, w_direct_6, w_direct_9,
                      w_direct_12, w_direct_15, w_direct_18, w_direct_21,
                      w_speed_0, w_speed_3, w_speed_6, w_speed_9,
                      w_speed_12, w_speed_15, w_speed_18, w_speed_21,
                      w_gust_0, w_gust_3, w_gust_6, w_gust_9,
                      w_gust_12, w_gust_15, w_gust_18, w_gust_21,
                      precipitation_3, precipitation_15,
                      vapor_0, vapor_3, vapor_6, vapor_9, vapor_12,
                      vapor_15, vapor_18, vapor_21,
                      humidity_0, humidity_3, humidity_6, humidity_9,
                      humidity_12, humidity_15, humidity_18, humidity_21,
                      p_station_0, p_station_3, p_station_6, p_station_9,
                      p_station_12, p_station_15, p_station_18, p_station_21) 

#### ДОБАВЛЕНИЕ ПЕРЕМЕННЫХ ОТСУТСТВУЮЩИХ В ПЕРВОНАЧАЛЬНОМ НАБОРЕ ####

# Добавление столбца с признаком выходных дней (0 - рабочий, 1 - выходной день)
weekends <- format(meteo_2$dates, format="%a")
weekends[weekends != c("Сб", "Вс")] <- 0
weekends[weekends == c("Сб", "Вс")] <- 1
meteo_2 <- tibble::add_column(meteo_2, weekends, .after = "dates")

# Добавление столбца со средней суточной температурой
T_avg <- apply(meteo_2[,2:9], 1, mean)
T_avg <- round(T_avg, digits = 1)
meteo_2 <- tibble::add_column(meteo_2, T_avg, .after = "T_min")

# Добавление столбца со средней скоростью ветра ночью
w_speed_avg_night <- apply(meteo_2[,c(37, 38, 43,45)], 1, mean)
w_speed_avg_night <- round(w_speed_avg_night, digits = 1)
meteo_2 <- add_column(meteo_2, w_speed_avg_night,
                      .after = "w_speed_21")

# Добавление столбца со средней скоростью ветра днем
w_speed_avg_day <- apply(meteo_2[,c(39:42)], 1, mean)
w_speed_avg_day <- round(w_speed_avg_day, digits = 1)
meteo_2 <- add_column(meteo_2, w_speed_avg_day,
                      .after = "w_speed_avg_night")

# Сохранение набора метеорологических данных в файл CSV
file_path <- paste("C:/Изменение климата и загрязнение атмосферы",
                   "/Разработка прогностической схемы (Вологда)/Datasets/meteo_2.csv",
                   sep = "")
readr::write_csv(meteo_2, file_path)

# Удаление лишних объектов из памяти
rm(list = ls()[c(1:11, 13:88)])

#### СОЗДАНИЕ НАБОРА АЭРОЛОГИЧЕСКИХ ДАННЫХ ####

# Импорт исходных данных аэрологических наблюдений наблюдений 
file_path <- paste("C:/Изменение климата и загрязнение атмосферы",
                   "/Разработка прогностической схемы (Вологда)",
                   "/Datasets/aero.csv", sep = "")
aero <- read.table(file_path, 
                   header = TRUE, sep = ",", stringsAsFactors = FALSE)

# Удаление пустых строк
aero <- aero[3:1828,]

# Преобразование формата даты
aero$dates <- as.Date(aero$dates, format = "%d-%m-%Y")

# Переименование переменных
names(aero)[10] <- "h_500_1000_00"
names(aero)[11] <- "h_500_1000_12"

# Преобразование текстовых переменных в целочисленные
aero$d_925_12 <- as.integer(aero$d_925_12)
aero$v_925_12 <- as.integer(aero$v_925_12)
aero$h_500_1000_12 <- as.integer(aero$h_500_1000_12)

# Сохранение набора аэрологических данных в файл CSV
file_path <- paste("C:/Изменение климата и загрязнение атмосферы",
                   "/Разработка прогностической схемы (Вологда)/Datasets/aero_2.csv",
                   sep = "")
readr::write_csv(aero, file_path)

# Удаление лишних объектов из памяти
rm(list = ls()[2])

#### СОЗДАНИЕ ОБЪЕДИНЕННОГО НАБОРА ДАННЫХ ####
# С ДОБАВЛЕНИЕМ ЕЖЕДНЕВНЫХ ЗНАЧЕНИЙ ПАРАМЕТРА Р

# Импорт исходных данных аэрологических наблюдений наблюдений 
file_path <- paste("C:/Изменение климата и загрязнение атмосферы",
                   "/Разработка прогностической схемы (Вологда)",
                   "/Datasets/P.csv", sep = "")
parametr_P <- read.table(file_path, 
                   header = FALSE, sep = ",", stringsAsFactors = FALSE)

# Преобразование формата даты
parametr_P$V1 <- as.Date(parametr_P$V1, format = "%d.%m.%Y")

# Переименование переменных
names(parametr_P)[1] <- "dates "
names(parametr_P)[2] <- "P"

# Объединение данных метеорологических и аэрологических наблюдений
working_dataset <- merge(meteo_2, aero)

# Добавление переменной с параметром Р
working_dataset <- add_column(working_dataset,
                              P = parametr_P$P, .after = "dates" )

# Создание вектора со значениями параметра Р в предыдущий день
prev_P <- working_dataset$P[1:1825]
prev_P <- c(NA, prev_P)

# Добавление переменной с параметром Р в предыдущий день
working_dataset <- add_column(working_dataset, P_prev = prev_P, .after = "P" )

# Сохранение объединенного набора данных
file_path <- paste("C:/Изменение климата и загрязнение атмосферы",
                   "/Разработка прогностической схемы (Вологда)",
                   "/Datasets/working_dataset.csv",
                   sep = "")
readr::write_csv(working_dataset, file_path)

# Удаление лишних объектов из памяти
rm(list = ls()[1:5])
